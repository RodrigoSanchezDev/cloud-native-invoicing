# Port & Context Path
server.address=0.0.0.0
server.port=8081

# AWS Credentials 
spring.cloud.aws.credentials.access-key=${AWS_ACCESS_KEY_ID}
spring.cloud.aws.credentials.secret-key=${AWS_SECRET_ACCESS_KEY}
# spring.cloud.aws.credentials.session-token=${AWS_SESSION_TOKEN}
spring.cloud.aws.region.static=us-east-1
spring.cloud.aws.s3.bucket=bucketssumativa1

#  EFS mounted
efs.base.dir=/mnt/efs/invoices

# Spring Security OAuth2 Resource Server - SIMPLIFIED CONFIGURATION
# Only what we need for JWT validation (public keys)
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://login.microsoftonline.com/28dbf599-4a0c-47c3-be6a-0790f3c7f43b/v2.0
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://login.microsoftonline.com/28dbf599-4a0c-47c3-be6a-0790f3c7f43b/discovery/v2.0/keys

# JWT Validation - Audience (Application ID from Azure Portal)
jwt.audience=054924b5-14ae-4ede-9d8b-a1a71a1e723f

# Azure AD Configuration (for reference only - not secrets)
azure.tenant-id=28dbf599-4a0c-47c3-be6a-0790f3c7f43b
azure.application-id=054924b5-14ae-4ede-9d8b-a1a71a1e723f

#  endpoints actuator
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG